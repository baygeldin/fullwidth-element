{"version":3,"sources":["webpack:///webpack/bootstrap b79b3c5fe1251e5eae39?3ddb*","webpack:///./index.js?96e7","webpack:///external \"Polymer\"?16b6","webpack:///./index.js","webpack:///../~/fullwidth/lib/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,2G;;;;;;;;ACAA,0B;;;;;;;;;;;;SCGgB;;AAHhB;;;;AACA;;;;;;AAEO,UAAS,KAAT,GAAiB;AACpB,SAAI,aAAJ;SAAU,YAAY,EAAZ,CADU;AAEpB,SAAI,SAAS,SAAS,gBAAT,CAA0B,IAA1B,EACT,WAAW,SAAX,EAAsB,IADb,EACmB,KADnB,CAAT,CAFgB;SAId,SAAoB,KAApB,OAJc;SAIN,UAAY,KAAZ;;AAJM,YAMZ,OAAO,OAAO,QAAP,EAAP,EAA2B;AAC/B,mBAAU,IAAV,CAAe,IAAf,EAD+B;MAAnC;0CANoB;;;;;AAQpB,8BAAa,mCAAb,oGAAwB;AAAnB,gCAAmB;;AACpB,iBAAI,QAAQ,KAAK,SAAL,CAAe,KAAf,CAAqB,GAArB,CAAR,CADgB;AAEpB,iBAAI,UAAU,SAAS,aAAT,CAAuB,MAAvB,CAAV,CAFgB;AAGpB,qBAAQ,KAAR,CAAc,UAAd,GAA2B,UAA3B,CAHoB;AAIpB,iBAAI,MAAJ,EAAY;;;;;;AACR,2CAAiB,gCAAjB,wGAAwB;6BAAf,oBAAe;;AACpB,6BAAI,OAAO,SAAS,aAAT,CAAuB,MAAvB,CAAP,CADgB;AAEpB,8BAAK,KAAL,CAAW,UAAX,GAAwB,QAAxB,CAFoB;AAGpB,8BAAK,WAAL,GAAmB,yBAAU,IAAV,CAAnB,CAHoB;AAIpB,6BAAI,SAAS,SAAS,cAAT,CAAwB,IAAI,MAAJ,CAAW,OAAX,CAAxB,CAAT,CAJgB;AAKpB,iCAAQ,WAAR,CAAoB,IAApB,EALoB;AAMpB,iCAAQ,WAAR,CAAoB,MAApB,EANoB;sBAAxB;;;;;;;;;;;;;;kBADQ;cAAZ,MASO;AACH,qBAAI,OAAO,MAAM,GAAN,CAAU;4BAAO,yBAAU,GAAV;kBAAP,CAAV,CACN,IADM,CACD,IAAI,MAAJ,CAAW,OAAX,CADC,CAAP,CADD;AAGH,yBAAQ,WAAR,CAAoB,SAAS,cAAT,CAAwB,IAAxB,CAApB,EAHG;cATP;AAcA,iBAAI,SAAS,kBAAQ,GAAR,CAAY,IAAZ,EAAkB,UAAlB,CAlBO;AAmBpB,+BAAQ,GAAR,CAAY,MAAZ,EAAoB,YAApB,CAAiC,OAAjC,EAA0C,IAA1C,EAnBoB;AAoBpB,+BAAQ,GAAR,CAAY,MAAZ,EAAoB,WAApB,CAAgC,IAAhC,EApBoB;UAAxB;;;;;;;;;;;;;;MARoB;;;;;;;ACHxB;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4DAA2D,gEAAgE;AAC3H;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,G","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b79b3c5fe1251e5eae39\n **/","module.exports = global[\"methods\"] = require(\"-!/home/alex/Projects/fullwidth-element/node_modules/babel-loader/index.js!/home/alex/Projects/fullwidth-element/node_modules/eslint-loader/index.js!/home/alex/Projects/fullwidth-element/src/index.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 2\n **/","module.exports = Polymer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Polymer\"\n ** module id = 2\n ** module chunks = 0 2\n **/","import fullwidth from 'fullwidth';\nimport Polymer from 'polymer';\n\nexport function ready() {\n    let node, textNodes = [];\n    let walker = document.createTreeWalker(this,\n        NodeFilter.SHOW_TEXT, null, false);\n    let { nowrap, spacing } = this;\n    //for (let node; (node = walker.nextNode());) {\n    while ((node = walker.nextNode())) {\n        textNodes.push(node); }\n    for (node of textNodes) {\n        let words = node.nodeValue.split(' ');\n        let wrapper = document.createElement('span');\n        wrapper.style.whiteSpace = 'pre-wrap';\n        if (nowrap) {\n            for (let word of words) {\n                let elem = document.createElement('span');\n                elem.style.whiteSpace = 'nowrap';\n                elem.textContent = fullwidth(word);\n                let spaces = document.createTextNode(' '.repeat(spacing));\n                wrapper.appendChild(elem);\n                wrapper.appendChild(spaces);\n            }\n        } else {\n            let text = words.map(str => fullwidth(str))\n                .join(' '.repeat(spacing));\n            wrapper.appendChild(document.createTextNode(text));\n        }\n        let parent = Polymer.dom(node).parentNode;\n        Polymer.dom(parent).insertBefore(wrapper, node);\n        Polymer.dom(parent).removeChild(node);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Search in array is O(n), hashmaps are O(1),\n// but char code evalution is still faster.\n// Hope it's not penny-wise and pound-foolish.\n\nfunction convertChar(code) {\n    if (code >= 33 && code <= 126) {\n        return code + 65248;\n    } else if (code === 163) {\n        return code + 65342;\n    } else if (code === 165) {\n        return code + 65344;\n    } else if (code === 183) {\n        return code + 65198;\n    } else if (code === 8361) {\n        return code + 57149;\n    } else if (code === 8373) {\n        return code + 57131;\n    }\n}\n\nfunction hasFullwidth(code) {\n    // 33 - !, 126 - ~, 163 - £, 165 - ¥,\n    // 183 - ·, 8361 - ₩, 8373 - ₵\n    return code >= 33 && code <= 126 || code === 163 || code === 165 || code === 183 || code === 8361 || code === 8373;\n}\n\nexports.default = function (str) {\n    var res = '';\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = str[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var ch = _step.value;\n\n            var code = ch.charCodeAt(0);\n            res += hasFullwidth(code) ? String.fromCharCode(convertChar(code)) : ch;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return res;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/fullwidth/lib/index.js\n ** module id = 5\n ** module chunks = 2\n **/"],"sourceRoot":""}